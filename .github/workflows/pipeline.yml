
name: Release Pipeline

on:
  push: {}
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true
        default: string
      versionName:
        description: 'Release Version Name'
        required: true
        default: string

jobs:
  release-pipeline:
   name: Release Pipeline
   runs-on: windows-latest
   env:
      PFX_CERT_NAME: cert.pfx
      EXTERNAL_FILES: martinzimmermann/DevOpsDaysGraz2025-ExternalFiles
   steps:
      - uses: actions/checkout@v4
        
      - name: Setup Dotnet tools
        uses: actions/setup-dotnet@v4
        with: 
          dotnet-version: '8.0.x'

      - name: Blablabla
        run: |
          echo "Mr."
          echo "Freeman"

      - name: Run Core.Test
        run: dotnet test .\src\DevOpsDaysTasks.Core.Tests

      - name: Run IntegrationTests
        run: dotnet test .\src\DevOpsDaysTasks.IntegrationTests

      # Problem: Hardcoded Release version
      - name: Publish Build
        env:
          VERSION: ${{ inputs.version || '0.0.0' }}
          VERSIONNAME: ${{ inputs.versionName || 'LoelchenEinRoellchen' }}
        run: dotnet publish -c Release src\DevOpsDaysTasks.UI\ -o DevOpsDaysTasks /p:Version=${{ env.VERSION }} /p:VersionName=${{ env.VERSIONNAME }} 

      - name: Checkout external Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.EXTERNAL_FILES }}
          path: ExternalFiles

        # Problem: We don't want to use the workshop folder
      - name: Copy Template
        run: |
          mkdir DevOpsDaysTasks/Templates
          cp workshop_material/default-tasks.xml DevOpsDaysTasks/Templates
      
      - name: Copy Template
        run: |
          mkdir DevOpsDaysTasks/Help
          cp workshop_material/default-tasks.xml DevOpsDaysTasks/Help

      # Problem: Cert and Password
      - name: Create Cert
        run: |
          $base64 = "${{ secrets.PFX_BASE64 }}"
          $contet = [System.Convert]::FromBase64String($base64)
          Set-Content ${{ env.PFX_CERT_NAME }} -value $contet -AsByteStream

      - name: Sign Release
        # run: .\scripts\sign.ps1 .\DevOpsDaysTasks\DevOpsDaysTasks.UI.exe -PfxFile .\workshop_material\devopsdays_tasks_codesign.pfx -PfxPassword Password
        run: .\scripts\sign.ps1 .\DevOpsDaysTasks\DevOpsDaysTasks.UI.exe -PfxFile ${{ env.PFX_CERT_NAME }} -PfxPassword ${{ secrets.PFX_PASSWORD }}

      # We don't have a release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: DevOpsDaysTasks
          name: DevOpsDaysTasks
